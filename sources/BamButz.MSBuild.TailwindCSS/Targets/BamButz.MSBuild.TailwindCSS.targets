<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <ItemGroup>
        <AvailableItemName Include="TailwindCSS" />
    </ItemGroup>

    <UsingTask
        TaskName="GetTailwindPluginsList"
        TaskFactory="RoslynCodeTaskFactory"
        AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
        <ParameterGroup>
            <ConfigFilePath ParameterType="System.String" Required="true" />
            <PluginsOut ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System"/>
            <Using Namespace="System.Collections.Generic"/>
            <Using Namespace="System.IO"/>
            <Using Namespace="System.Linq"/>
            <Using Namespace="System.Text.RegularExpressions"/>
            <Using Namespace="Microsoft.Build.Framework"/>
            <Using Namespace="Microsoft.Build.Utilities"/>
            <Code Type="Fragment" Language="cs">
<![CDATA[
if (!File.Exists(ConfigFilePath))
    return true;

var cfgFileStr = File.ReadAllText(ConfigFilePath);
var cfgJson = cfgFileStr.Split(new string[]{"module.exports = "}, StringSplitOptions.None)[1];
cfgJson = Regex.Replace(cfgJson, @"require\(['""](.*)['""]\)", @"""$1""");
var pluginsArrStr = Regex.Replace(cfgJson, @"(?:{.*plugins: \[)(.*)(?:\].*})", "$1", RegexOptions.Singleline);
pluginsArrStr = pluginsArrStr.Replace("\n", String.Empty);
var plugins = pluginsArrStr.Split(new char[]{','}, StringSplitOptions.RemoveEmptyEntries).ToList<string>();

var pluginsItems = new List<ITaskItem>(plugins.Count);

foreach(var plugin in plugins)
    pluginsItems.Add(new TaskItem(plugin.ToString()));

PluginsOut = pluginsItems.ToArray();
]]>
            </Code>
        </Task>
    </UsingTask>

    <Target Name="CompileTailwindCSS" AfterTargets="BeforeBuild" Condition="@(TailwindCSS->Count()) > 0">
        <CallTarget Targets="CheckIfNodeJSIsInstalled" />

        <CallTarget Targets="InstallTailwindCSS" />

        <Exec Command="node $(MSBuildThisFileDirectory)../index.js &quot;%(TailwindCSS.FullPath)&quot; &quot;%(TailwindCSS.RootDir)%(TailwindCSS.Directory)%(TailwindCSS.Filename).min.css&quot; &quot;$(ProjectDir.TrimEnd('\'))&quot;"
              WorkingDirectory="$(MSBuildThisFileDirectory)../" />
    </Target>

    <Target Name="CheckIfNodeJSIsInstalled">
        <PropertyGroup>
            <!-- Send the output to null to keep the log clean -->
            <NodeTestCommand Condition="$(OS) == Windows_NT">node -v &gt; NUL</NodeTestCommand>
            <NodeTestCommand Condition="$(OS) != Windows_NT">node -v &gt; /dev/null</NodeTestCommand>
        </PropertyGroup>

        <Exec Command="$(NodeTestCommand)" IgnoreExitCode="true" EchoOff="true">
            <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
        </Exec>

        <Error Text="Node.js must be installed in order to generate tailwind css!" Condition="$(ExitCode) != 0" />
    </Target>

    <Target Name="InstallTailwindCSS"
            Condition="!Exists('$(MSBuildThisFileDirectory)../node_modules')">
        <Message Text="Installing required npm packages for tailwindcss" Importance="high" />
        
        <Exec Command="npm install postcss --silent"
              WorkingDirectory="$(MSBuildThisFileDirectory)../"
              EchoOff="true" />
        <Exec Command="npm install postcss-cli --silent"
              WorkingDirectory="$(MSBuildThisFileDirectory)../"
              EchoOff="true" />
        <Exec Command="npm install postcss-nesting --silent"
              WorkingDirectory="$(MSBuildThisFileDirectory)../"
              EchoOff="true" />
        <Exec Command="npm install tailwindcss --silent"
              WorkingDirectory="$(MSBuildThisFileDirectory)../"
              EchoOff="true" />
        <Exec Command="npm install cssnano --silent"
              WorkingDirectory="$(MSBuildThisFileDirectory)../"
              EchoOff="true" />

        <!-- Install plugins -->
        <GetTailwindPluginsList ConfigFilePath="$(ProjectDir)/tailwind.config.js">
            <Output ItemName="Plugins" TaskParameter="PluginsOut" />
        </GetTailwindPluginsList>
        <Exec Command="npm install %(Plugins.Identity) --silent"
              WorkingDirectory="$(MSBuildThisFileDirectory)../"
              EchoOff="true" />
    </Target>
</Project>